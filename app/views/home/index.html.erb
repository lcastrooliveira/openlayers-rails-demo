<div class="container-fluid">
  <div class="row">
    <div class="col-md-6 col-sm-12 map-frame img-thumbnail" style="margin-bottom: 20px;">
      <div>
        <%= render partial: 'map/map' %>
      </div>
    </div>
    <div class="col-md-6 col-sm-12 information-block">
      <h3 class="information-title">About this Demo</h3>
      <p>Would you like to take this track in Western Australia ? Click on the
        icons to know a little bit more about the track’s attractions. There are
        some cool surprises :)
       </p>
       <p>
         Don’t forget to use the menu on the right to filter the data displayed
         or switch to satellite imagery.
       </p>
       <p>
         This is a demonstration of my research performed when I was a software
         developer for <a href="http://www.adeturcataratasecaminhos.org.br/" target="_blank">Adetur Cataratas e Caminhos</a>. It shows how to link
         geographical data from <a href="http://www.postgis.net/">Postgis</a> in a <a href="http://rubyonrails.org/" target="_blank">Ruby on Rails</a> application and display the
         information using <a href="https://openlayers.org/" target="_blank">OpenLayers 4</a>. THE TRACK AND POINTS USED ARE FICTITIOUS
         DATA I’VE CREATED FOR DEMONSTRATION ONLY.
       </p>
       <h4>Technically speaking the flow works this way:</h4>
       <ol>
         <li>
           A geometry is stored in a Postgres database with Postgis extension, along
           with conventional tabular data
         </li>
         <li>
           These records are linked to a rails application in the model layer
           using active record
         </li>
         <li>
           The geographic data is combined with tabular data, converted into
           <b><a href="http://geojson.org/" target="_blank">geojson</a></b>
           and served by "geo controllers" to the client
         </li>
         <li>
           The Geojson is read as a vector layer data source by OpenLayers 4.
           There's also some work to split each point category into a specific map
           layer. Therefore the layer switcher can filter the interest points
           through their types
         </li>
       </ol>
       <h4>Really cool gems:</h4>
       <ul>
         <li>
           <a href="https://github.com/rgeo/activerecord-postgis-adapter" target="_blank">activerecord-postgis-adapter</a>
           – Allows Rails Active Record to
           connect to a Postgis database
         </li>
         <li>
           <a href="https://github.com/rgeo/rgeo-geojson" target="_blank">rgeo-geojson</a>
            – Has methods to convert postgis geometry types into
           geojson
         </li>
         <li>
           <a href="https://github.com/yamldb/yaml_db" target="_blank">yaml_db</a>
            – Really cool gem that helps to dump your database data as YML
         </li>
       </ul>
    </div>
  </div>
</div>
